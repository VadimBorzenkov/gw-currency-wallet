{
    "swagger": "2.0",
    "info": {
        "description": "API for managing currency wallets and transactions",
        "title": "Currency wallet API",
        "termsOfService": "https://example.com",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/v1/login": {
            "post": {
                "description": "Авторизация пользователя с возвратом JWT-токена для дальнейших запросов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Авторизация пользователя",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LoginResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid username or password",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/register": {
            "post": {
                "description": "Создает нового пользователя с предоставленными данными",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register new user",
                "parameters": [
                    {
                        "description": "Registration data",
                        "name": "register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/wallet/balance": {
            "get": {
                "description": "Получает текущий баланс пользователя.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Get user balance",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.BalanceResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/wallet/deposit": {
            "post": {
                "description": "Пополняет баланс пользователя на указанную сумму.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Deposit funds to user balance",
                "parameters": [
                    {
                        "description": "Deposit request",
                        "name": "deposit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DepositRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DepositResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/wallet/exchange": {
            "post": {
                "description": "Обменивает одну валюту на другую по актуальному курсу.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exchange"
                ],
                "summary": "Exchange currency",
                "parameters": [
                    {
                        "description": "Exchange request",
                        "name": "exchange",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ExchangeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ExchangeResponse"
                        }
                    },
                    "400": {
                        "description": "Insufficient funds or invalid currencies",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/wallet/rates": {
            "get": {
                "description": "Получает актуальные курсы валют для различных валютных пар.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exchange"
                ],
                "summary": "Get exchange rates",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RatesResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/wallet/withdraw": {
            "post": {
                "description": "Выводит указанную сумму со счета пользователя.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "wallet"
                ],
                "summary": "Withdraw funds from user balance",
                "parameters": [
                    {
                        "description": "Withdraw request",
                        "name": "withdraw",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.WithdrawRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.WithdrawResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.BalanceResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                }
            }
        },
        "models.DepositRequest": {
            "type": "object",
            "required": [
                "amount",
                "currency"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                }
            }
        },
        "models.DepositResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "new_balance": {
                    "type": "number"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.ExchangeRequest": {
            "type": "object",
            "required": [
                "amount",
                "from_currency",
                "to_currency"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "from_currency": {
                    "type": "string"
                },
                "to_currency": {
                    "type": "string"
                }
            }
        },
        "models.ExchangeResponse": {
            "type": "object",
            "properties": {
                "exchanged_amount": {
                    "type": "number"
                },
                "message": {
                    "type": "string"
                },
                "new_balance": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                }
            }
        },
        "models.LoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": "password123"
                },
                "username": {
                    "type": "string",
                    "example": "user123"
                }
            }
        },
        "models.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "JWT_TOKEN"
                }
            }
        },
        "models.RatesResponse": {
            "type": "object",
            "properties": {
                "EUR": {
                    "type": "number"
                },
                "RUB": {
                    "type": "number"
                },
                "USD": {
                    "type": "number"
                },
                "rates": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                }
            }
        },
        "models.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "description": "Электронная почта",
                    "type": "string"
                },
                "password": {
                    "description": "Пароль",
                    "type": "string",
                    "minLength": 6
                },
                "username": {
                    "description": "Логин пользователя",
                    "type": "string",
                    "minLength": 3
                }
            }
        },
        "models.RegisterResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Сообщение об успешной регистрации",
                    "type": "string"
                },
                "user_id": {
                    "description": "Идентификатор нового пользователя",
                    "type": "integer"
                }
            }
        },
        "models.WithdrawRequest": {
            "type": "object",
            "required": [
                "amount",
                "currency"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                }
            }
        },
        "models.WithdrawResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "new_balance": {
                    "type": "number"
                }
            }
        }
    }
}